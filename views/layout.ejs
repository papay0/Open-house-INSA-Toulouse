<!DOCTYPE html>
<html>
<head>
  <title>JPO INSA Toulouse</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
          -->
          <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
          <script src="js/dependencies/react.js"></script>
          <script src="js/dependencies/react-dom.js"></script>
          <!--STYLES-->
          <link rel="stylesheet" href="/styles/bootstrap-datetimepicker-standalone.css">
          <link rel="stylesheet" href="/styles/bootstrap-datetimepicker.css">
          <link rel="stylesheet" href="/styles/bootstrap-datetimepicker.min.css">
          <link rel="stylesheet" href="/styles/bootstrap-theme.css">
          <link rel="stylesheet" href="/styles/bootstrap-theme.min.css">
          <link rel="stylesheet" href="/styles/bootstrap.css">
          <link rel="stylesheet" href="/styles/bootstrap.min.css">
          <link rel="stylesheet" href="/styles/importer.css">
          <!--STYLES END-->
        </head>

        <body>

          <nav class="navbar navbar-default navbar-static-top">
            <div class="container">
              <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                  <span class="sr-only">Toggle navigation</span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">JPO INSA Toulouse</a>
              </div>
              <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                  <li><a href="/">Home</a></li>
                  <li><a href="/admin">Admin</a></li>
                  <li><a href="/register">Register</a></li>
                  <li><a href="/loginuser">LoginUser</a></li>
                  <li><a href="/planning">ShowPlanning</a></li>
                  <li class="dropdown ">
                    <a href="/admin" class="dropdown-toggle" data-hover="dropdown" data-close-others="true">Admin</a>               
                <ul class="dropdown-menu">
                    <li><a href="/presentations/create">Create presentation</a></li>
                    <li><a href="/">AAAA</a></li>
                    <li><a href="/">BBBB</a></li>
                    <li><a href="/">CCCC</a></li>
                  </ul>
                </li>
                  <li><a href="/login">LogIn</a></li>
                  <li><a href="/presentations/create">Create presentation</a></li>
                  <li><a href="/presentations/edit">Edit presentation</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                  <li><a href="/logout">LogOut</a></li>
                </ul>
              </div><!--/.nav-collapse -->
            </div>
          </nav>

          <%- body %>

          <footer style="width:100%; height:100px; position:absolute; bottom:0; left:0;">
            <div class="container">
              <div class="row">
                <div class="col-lg-10 col-lg-offset-1 text-center">
                  <hr class="small">
                  <p class="text-muted">Copyright &copy; INSA Toulouse 2015</p>
                </div>
              </div>
            </div>
          </footer>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
            -->

            <!--TEMPLATES-->
            
            <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

        -->

        <!--SCRIPTS-->
        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/dependencies/bootstrap.min.js"></script>
        <script src="/js/dependencies/moment/min/moment.min.js"></script>
        <script src="/js/dependencies/bootstrap-datetimepicker.min.js"></script>
        <!--SCRIPTS END-->
      </body>
      </html>
